{"version":3,"sources":["components/CircleSelector/CircleSelector.jsx","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","state","circleChoice","this","setState","className","onClick","updateChoice","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAgEeA,E,4MAzDXC,MAAQ,CACJC,aAAc,mB,kDAOd,SAAaA,GACTC,KAAKC,SAAS,CAACF,mB,oBASvB,WAAU,IAAD,OACL,OACI,mCACI,gCACI,qDAAwBC,KAAKF,MAAMC,gBACnC,8BACI,wBACIG,UAAU,iBACVC,QAAS,kBAAM,EAAKC,aAAa,uBAFrC,+BAMJ,8BACI,wBACIF,UAAU,iBACVC,QAAS,kBAAM,EAAKC,aAAa,uBAFrC,+BAKJ,8BACI,wBACIF,UAAU,iBACVC,QAAS,kBAAM,EAAKC,aAAa,uBAFrC,+BAKJ,8BACA,wBACQF,UAAU,iBACVC,QAAS,kBAAM,EAAKC,aAAa,uBAFzC,wC,GA/CSC,IAAMC,WCoBpBC,E,4JAlBb,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,+BAEE,8BAEA,cAAC,EAAD,e,GATQI,aCQHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b23d4b7d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass CircleSelector extends React.Component {\r\n\r\n   \r\n\r\n    state = {\r\n        circleChoice: 'SELECT CIRCLE 1'\r\n        \r\n\r\n    };\r\n\r\n    \r\n        \r\n        updateChoice(circleChoice) {\r\n            this.setState({circleChoice\r\n            \r\n            });\r\n          \r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <h1>Current Selection: {this.state.circleChoice}</h1>\r\n                    <div>\r\n                        <button \r\n                            className=\"CircleSelector\"\r\n                            onClick={() => this.updateChoice(\"CIRCLE 1: SELECTED\")}>SELECT CIRCLE 1</button>\r\n\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <button \r\n                            className=\"CircleSelector\"\r\n                            onClick={() => this.updateChoice(\"CIRCLE 2: SELECTED\")}>SELECT CIRCLE 2</button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button \r\n                            className=\"CircleSelector\"\r\n                            onClick={() => this.updateChoice(\"CIRCLE 3: SELECTED\")}>SELECT CIRCLE 3</button>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                    <button \r\n                            className=\"CircleSelector\"\r\n                            onClick={() => this.updateChoice(\"CIRCLE 4: SELECTED\")}>\r\n                            SELECT CIRCLE 4\r\n                    </button>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CircleSelector;","import React, { Component } from 'react';\nimport './App.css';\nimport CircleSelector from './components/CircleSelector/CircleSelector';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          \n          <div>\n\n          <CircleSelector />\n\n          </div>\n         \n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}